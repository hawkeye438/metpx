
Samples of PDS ish things for study.

  need to make a logging module.
  look at PDS logs, and make them look identical.

PDSsender log entries
===
INFO Jul 14 14:52:32: pdssender 6258: (M)imask=ABUS21_KIND*:AMTCP2FILE-EXT:PDS*-DEV:BULLETIN:ASCII
INFO Jul 14 14:52:32: pdssender 6258:    client_sysname=ppp1
INFO Jul 14 14:52:32: pdssender 6258:    time/raster/rename_in_spec=004
INFO Jul 14 14:52:32: pdssender 6258:    rename_spec=
INFO Jul 14 14:52:32: pdssender 6258:    tag=''
INFO Jul 14 14:52:32: pdssender 6258:    cmd=''
INFO Jul 14 14:52:32: pdssender 6258:    ext=''
INFO Jul 14 14:52:32: pdssender 6258:    rem_dirname=/apps/data/pdsdev/
===

===
NFO Sep 09 16:54:24: pdssender 4833: Startup is OK, read /apps/pds/etc/ppp1_tandem.conf
INFO Sep 09 16:54:24: pdssender 4833: Check messages in /apps/pds/log/PDSlog
INFO Sep 13 12:50:18: /apps/pds//bin//pdsftpxfer: INFO: File CACN00_CWAO_131250_WSQ_00001:NAMrx-tandem:CWAO:CA:ASCII::2004
0913125007:pds1-dev   IS READY TO GO ON ppp1.cmc.ec.gc.ca
INFO Sep 13 12:50:18: /apps/pds//bin//pdsftpxfer: INFO: File CACN00_CWAO_131250_WSQ_00001:NAMrx-tandem:CWAO:CA:ASCII::2004
0913125007:pds1-dev   sent to ppp1.cmc.ec.gc.ca as    CACN00_CWAO_131250_WSQ_00001    Bytes= 111
INFO Sep 13 12:50:18: /apps/pds//bin//pdsftpxfer: INFO: File CACN00_CWAO_131250_WSQ_00002:NAMrx-tandem:CWAO:CA:ASCII::2004
0913125007:pds1-dev   IS READY TO GO ON ppp1.cmc.ec.gc.ca
INFO Sep 13 12:50:18: /apps/pds//bin//pdsftpxfer: INFO: File CACN00_CWAO_131250_WSQ_00002:NAMrx-tandem:CWAO:CA:ASCII::2004
0913125007:pds1-dev   sent to ppp1.cmc.ec.gc.ca as    CACN00_CWAO_131250_WSQ_00002    Bytes= 295
INFO Sep 13 12:50:18: /apps/pds//bin//pdsftpxfer: INFO: File SPCN43_CWAO_131248_00003:NAMrx-tandem:CWAO:SP:ASCII::20040913
125007:pds1-dev   IS READY TO GO ON ppp1.cmc.ec.gc.ca
INFO Sep 13 12:50:18: /apps/pds//bin//pdsftpxfer: INFO: File SPCN43_CWAO_131248_00003:NAMrx-tandem:CWAO:SP:ASCII::20040913
125007:pds1-dev   sent to ppp1.cmc.ec.gc.ca as    SPCN43_CWAO_131248_00003    Bytes= 73
INFO Sep 13 12:50:18: /apps/pds//bin//pdsftpxfer: INFO: File AACN81_CWAO_131250_00004:NAMrx-tandem:CWAO:AA:ASCII::20040913
125007:pds1-dev   IS READY TO GO ON ppp1.cmc.ec.gc.ca
INFO Sep 13 12:50:18: /apps/pds//bin//pdsftpxfer: INFO: File AACN81_CWAO_131250_00004:NAMrx-tandem:CWAO:AA:ASCII::20040913
125007:pds1-dev   sent to ppp1.cmc.ec.gc.ca as    AACN81_CWAO_131250_00004    Bytes= 76
INFO Sep 13 12:50:18: /apps/pds//bin//pdsftpxfer: INFO: File CACN00_CWAO_131250_WZN_00005:NAMrx-tandem:CWAO:CA:ASCII::2004
0913125007:pds1-dev   IS READY TO GO ON ppp1.cmc.ec.gc.ca
INFO Sep 13 12:50:18: /apps/pds//bin//pdsftpxfer: INFO: File CACN00_CWAO_131250_WZN_00005:NAMrx-tandem:CWAO:CA:ASCII::2004
====

====
	
Jul 22 17:00:01: /apps/pds//bin//pdsftpxfer: INFO: File SRWA20_KWAL_221356_208960:AMTCP2FILE-EXT:PDS1-DEV:BULLETIN:ASCII::20040722164923:pds1-dev   sent to ppp1.cmc.ec.gc.ca as    SRWA20_KWAL_221356_208960    Bytes= 61
INFO Jul 22 17:00:01: /apps/pds//bin//pdsftpxfer: INFO: File SACN59_CWAO_221600_RRB_208967:AMTCP2FILE-EXT:PDS1-DEV:BULLETIN:ASCII::20040722164923:pds1-dev   sent to ppp1.cmc.ec.gc.ca as    SACN59_CWAO_221600_RRB_208967    Bytes= 75
INFO Jul 22 17:00:01: /apps/pds//bin//pdsftpxfer: INFO: File SXCN10_CYUL_221355_208953:AMTCP2FILE-EXT:PDS1-DEV:BULLETIN:ASCII::20040722164924:pds1-dev   sent to ppp1.cmc.ec.gc.ca as    SXCN10_CYUL_221355_208953    Bytes= 1880
INFO Jul 22 17:00:01: /apps/pds//bin//pdsftpxfer: INFO: File ISAB51_CYDN_221356_208957:AMTCP2FILE-EXT:PDS1-DEV:BULLETIN:ASCII::20040722164924:pds1-dev   sent to ppp1.cmc.ec.gc.ca as    ISAB51_CYDN_221356_208957    Bytes= 397
INFO Jul 22 17:00:01: /apps/pds//bin//pdsftpxfer: INFO: File SXMS40_KWAL_221356_208961:AMTCP2FILE-EXT:PDS1-DEV:BULLETIN:ASCII::20040722164924:pds1-dev   sent to ppp1.cmc.ec.gc.ca as    SXMS40_KWAL_221356_208961    Bytes= 73
INFO Jul 22 17:00:01: /apps/pds//bin//pdsftpxfer: INFO: File SAGL41_BGSF_221350_208985:AMTCP2FILE-EXT:PDS1-DEV:BULLETIN:ASCII::20040722164926:pds1-dev   sent to ppp1.cmc.ec.gc.ca as    SAGL41_BGSF_221350_208985    Bytes= 590
INFO Jul 22 17:00:01: /apps/pds//bin//pdsftpxfer: INFO: File SAOS31_LOWM_221350_208986:AMTCP2FILE-EXT:PDS1-DEV:BULLETIN:ASCII::20040722164926:pds1-dev   sent to ppp1.cmc.ec.gc.ca as    SAOS31_LOWM_221350_208986    Bytes= 468
INFO Jul 22 17:00:01: /apps/pds//bin//pdsftpxfer: INFO: File SASW31_LSSW_221350_208989:AMTCP2FILE-EXT:PDS1-DEV:BULLETIN:ASCII::20040722164926:pds1-dev   sent to ppp1.cmc.ec.gc.ca as    SASW31_LSSW_221350_208989    Bytes= 198

====

  """


  """
  def PyDSchkprod():

  scan a directory for file names, as above, then 
  link source file into the db, then 
  link the db file to matching ones in the client incoming directories.

  dd = basename(d)
  if not isdir(dd):  #recursively build db dirs as needed.
      makedirs(dd)

  link( i, d )

  for c in cm: 
     clientname= FET_HOME + c + "/incoming" + i
     link( d, clientname )
      
  unlink( i ) # remove the original from the input directory.

  """

A1=${What}${FIELD_DELIMITER}
A2=${Ori_system}${FIELD_DELIMITER}
A3=${Ori_site}${FIELD_DELIMITER}
A4=${Product_type}${FIELD_DELIMITER}
A5=${File_format}${FIELD_DELIMITER}
A6=${FIELD_DELIMITER}
A7=${TIMESTAMP}

PDS_filename=${A1}${A2}${A3}${A4}${A5}${A6}${A7}
###echo "PDS_filename=${PDS_filename}" >> ${ErrFile}

ERROR Jan 09 00:19:05: /apps/pds//bin//pdsftpxfer: ERROR: File /apps/pds/home/bull_metmgr1_O_pri34/incoming//SDUS43_KWBC_082320_31687:nwsA:KWBC:SD:4.A.I.C.M.H.S.F.O.::20050108233713:pds3-dev encountered an error during put.


/apps/pds/pdsdb/SD/nwsA/KWBC

													   



  """
  PyDSsender

  periodically scan the output directory and prepare an input file
  for the protocol specific process format described by:

# to feed pdsftpxfer properly need an input file:
# To launch:  app_name input_file
#
# Format of input file: first line =
#                       system_name<space>login_name<space>password \
#                       <space>PDS_ROOT<space>LOG_DIR<space>LBIN_DIR \
#                       <space>max_filename_length \
#                       <space>location_of_sent_files \
#                       <space>sent_extension_def
#
# NOTE: PDS_ROOT and LBIN_DIR are full pathnames. LOG_DIR has to be
#       prepended with PDS_ROOT.
#
# The rest of the file is as follows, line by line:  1<space>2<space>.....6
# where 1...6 are defined as follows:
#  1 - (str) local dir
#  2 - (str) local file
#  3 - (str) remote dir
#  4 - (str) remote file
#  5 - (int) chmod_spec
#  6 - (int) move_file =1 if we should move the file after we're done with it
#



#########################################################################
#  Config file for the pdssender program
#  use "#" in column 1 for comments
#  all pathnames are relative to $PDS_ROOT/ unless otherwise specified or
#  are absolute pathnames
#
#MANDATORY:
#client_id     - defines the client's identity, MUST be unique and defined
#                in user pds' clientlist file
#
client_id      client1
#
#OPTIONAL:
#log_to        - defaults to the client ID, relative to $PDS_ROOT/log/
#log_roll_over - defaults to monthly, the other options are daily and weekly
#chmod         - defaults to 664, this tells the pdsftpxfer script to use
#                "umask 777" followed by "chmod xxx" to set the file access
#                permission of the destination file; if 0 is specified, the
#                "umask" and "chmod" commands will not be used; the allowable
#                values range from 0 to 777; LOCALHOST clients default to 664;
#ftp_timer     - defaults to 60 seconds, max time alloted for each FTP
#                operation, minimum 30 seconds, maximum 3600 seconds
#queue_timer   - defaults to 3600 seconds, time for a product to remain in the
#                incoming directory, minimum 600 seconds, maximum 7200 seconds
#sleep_timer   - defaults to 10 seconds between directory scans,
#                minimum 1 second, maximum 3600 seconds
#debug_level   - defaults to 3, use 4 to debug and move entry to the beginning
#                of this file
#send_newest_first - if missing, defaults to no, meaning the oldest file in
#                    the incoming directory is sent first, specify yes to
#                    send to newest file first, valid values are "yes" or "no"
#                    NOTE: If you choose to send the newest first and if files
#                          are sent without the TIME option and if the
#                          destination filename is not unique, you may end up
#                          with the oldest file instead of the newest in the
#                          end.
#ftpxfer_script - defaults to bin/pdsftpxfer. Next release of PDS will
#                 deprecate the use of bin/pdsftpxfer.
#                 Specifies an application to run to facilitate the file
#                 transfer. See the example pdsftpxferLinuxHP
#

