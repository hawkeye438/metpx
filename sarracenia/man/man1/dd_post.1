.TH DD_Post "1" "Aug 2015" "sara 0.0.1" "Sarracenia suite"
.SH NAME
dd_post \- Sarracenia program posting a message about a product made available.
.SH SYNOPSIS
.B dd_post 
[\fI-u|--url url\fR] [\fI-b|--broker broker\fR]...[\fIOPTIONS\fR]
.SH DESCRIPTION
.PP
In the SARRACENIA suite, the main goal is to post the availability and readiness
of one's file product. Subscribers use \fIdd_subscribe\fR to consume the post and
download the product.

\fIdd_post\fR posts a product. The [\fI-u|--url url\fR] option specifies
the location to download from which the product can be downloaded by subscribers.
There is usually one posting per product.

The destination of the post is an AMQP server, also called a broker.
The user specifies it with the option [\fI-b|--broker broker\fR]. 

.nf
The URL form of the \fIurl\fR are :

       [ftp|http|sftp]://[user[:password]@]host[:port]//absolute_path_to_the/product_name
       or
       [ftp|http|sftp]://[user[:password]@]host[:port]/relative_path_to_the/product_name
       or
       file://absolute_path_to_the/product_name
.fi

.nf
The URL form of the \fIbroker\fR :

       [amqp|amqps]://[user[:password]@]host[:port][/vhost]
.fi

An example of an excution of \fIdd_post\fR:
.nf

dd_post -u sftp://stanley@mysftpserver.com//data/shared/products/foo -b amqp://broker.com

By default, dd_post reads the file /data/shared/products/foo and calculates its checksum.
It then builds a post message, logs into broker.com as user 'guest' (default credentials)
and sends the post  to defaults vhost '/' and default exchange 'amq.topic'.

A subscriber can download the file /data/shared/products/foo  by logging as user stanley
on mysftpserver.com using the sftp protocol to  broker.com assuming he has proper credentials.

The output of the command is as follows :

[INFO] Key v02.post.guest.data.shared.products.foo
[INFO] Notice 20150813161959.854 sftp://stanley@mysftpserver.com/ /data/shared/products/foo
[INFO] Headers {'source': 'guest', 'sum': 'd,82edc8eb735fd99598a1fe04541f558d', 'parts': '1,4574,1,0,0'}


.fi
In SARRACENIA each post is published under a certain topic.
The first log line starting with '[INFO] Key', gives the \fBtopic key\fR of the
post. Topics in \fIAMQP\fR are fields separated by dot. In SARRACENIA 
it is made of a version \fIV02\fR, an action \fIpost\fR, and finally the file path separated with dots, here,
\fIdata.shared.products.foo\fR

The second log line starting with '[INFO] Notice' is the product post.
Here it consists of a time \fI20150813161959.854\fR, and the source url of the product in the last 2 fields.

The third log line gives informations that are placed in the amqp message header.
Here it consists of \fI'source': 'guest'\fR the amqp user.
\fI'sum': 'd,82edc8eb735fd99598a1fe04541f558d'\fR mentions checksum information,
here, \fId\fR means md5 checksum performed on the data, and \fI82edc8eb735fd99598a1fe04541f558d\fR
is the checksum value.  \fI'parts': '1,4574,1,0,0'\fR suggest to download the file in 1 part of 4574 bytes
(the actual filesize),  the remaining 1,0,0 gives the number of block, the remaining in bytes and the current block.
.
.fi

Another example:
.nf

dd_post -dr /data/web/public_data -u http://dd.weather.gc.ca/bulletins/alphanumeric/SACN32_CWAO_123456 -b amqp://broker.com

By default, dd_post reads the file /data/web/public_data/bulletins/alphanumeric/SACN32_CWAO_123456
(concatenating the document_root and relative path of the source url to obtain the local file path)
and calculates its checksum. It then builds a post message, logs into broker.com as user 'guest'
(default credentials) and sends the post to defaults vhost '/' and exchange 'amq.topic'

A subscriber can download the file http://dd.weather.gc.ca/bulletins/alphanumeric/SACN32_CWAO_123456 using http
without authentication on dd.weather.gc.ca.
.fi

.SH ARGUMENTS AND OPTIONS
.PP
.TP

.TP
\fB[-b|--broker <broker>]
.nf
\fIbroker\fR is the broker to connect to to send the post.
.fi

.TP
\fB[-c|--config <configfile>]
.nf
Any command line arguments has a corresponding long version starting with '--'.
For example \fI-u\fR has the long form \fI--url\fR. You can also specify
this option in a configuration file shall you need it. To do so, you simply
use the long form without the '--', and put its value separated by a space.
In a configuration file the right syntax to set the url is :

\fBurl <url>\fR 

The \fIconfig\fR option is no exception... and if used the content of this
other specified file will have its options processed.
.fi

.TP
\fB[-dr|--document_root <path>]
.nf
The \fIdocument_root\fR option supplies the directory path that,
when combined with the relative one from \fIurl\fR, 
gives the local absolute path to the data file to be posted.
.fi

.TP
\fB[-ex|--exchange <exchange>]
.nf
By default, the exchange used is amq.topic. This exchange is provided on broker
for general usage. It can be overwritten with this \fIexchange\fR option

.TP
\fB[-f|--flow <string>]
.nf
\fIflow\fR is an arbitrary label that allows
the user to identify a specific flow.
The flow string is sets in the amqp message header.
By default there is no flow.
.fi

.TP
\fB[-h|-help|--help]
.nf
Display program options.
.fi

.TP
\fB[-rn|--rename <path>]
.nf
With the \fIrename\fR  option, the user can
suggest a destination path to its products. If the given
path ends with '/' it suggests a directory path... 
If it doesn't, the option specifies a file renaming.
.fi

.TP
\fB[-t|--topic <key>]
.nf
By default, the topic key is made of a version \fIV02\fR, an action \fIpost\fR,
and finally the file path separated with dots (dot being the topic separator for amqp).
It can be overwritten with the \fItopic\fR option.
.fi

.TP
\fB[-tp|--topic_prefix <key>]
.nf
By default, the topic prefix is version \fIV02\fR, an action \fIpost\fR.
You can overwrite this default with option \fItopic_prefix\fR.
.fi

.TP
\fB[-u|--url <url>]
.nf
\fIurl\fR is the actual download url to be
used by the subscribers.
.fi

.SH ADVANCED OPTIONS

.TP
\fB[-p|--parts <value>]
.nf
The user can suggest how to download a file.
By default it suggests to download the entire file.
In this case, the amqp message header will have an
entry parts with value '1,filesize_in_bytes'.
To suggest to download a file in blocksize of 10Mb,
the user can specify \fI-p i,10M\fR. \fIi\fR stands for
"inplace" and means to put the part directly into the file.
\fR-p p,10M\fR suggests the same blocksize but to put the part
in a separate filepart. If the \fIblocksize\fR is bigger than
the filesize, the program will fall back to the default.
There will be one post per suggested part.

The value of the \fIblocksize\fR  is an integer that may be
followed by  [\fIB|K|M|G|T\fR] which stands for \fIB\fRytes
,\fIK\fRilobytes, \fIM\fRegabytes, \fIG\fRigabytes, \fIT\fRerabytes.
All theses references are powers of 2 (except for Bytes).

When suggesting parts, the value put in the amqp message header varies.
For example if headers[parts] as value 'p,256,12,11,4' it stands for :
\fIp\fR suggesting part, a blocksize in bytes \fI256\fR,
the number of block of that size \fI12\fR, the remaining bytes \fI11\fR, 
and the current block \fI4\fR,
.fi


.TP
\fB[-sum|--sum <string>]
.nf
All product posts include a checksum.
It is placed in the amqp message header will have as an
entry \fIsum\fR with default value 'd,md5_checksum_on_data'.
The \fIsum\fR option tell the program how to calculate the checksum.
It is a comma separated string.
Valid checksum flags are :

    [0|n|d|c=<scriptname>]
    where 0 : no checksum... value in post is 0
          n : do checksum on filename
          d : do md5sum on file content

.fi


.SH DEVELOPER SPECIFIC OPTIONS

.TP
\fB[-debug|--debug]
.nf
Active if \fI-debug|--debug\fR appears in the command line... or
\fIdebug\fR is set to True in the configuration file used.
.fi

.TP
\fB[-r|--randomize]
.nf
Active if \fI-r|--randomize\fR appears in the command line... or
\fIrandomize\fR is set to True in the configuration file used.
If there are several posts because the file is posted
by block because the \fIblocksize\fR option was set, the block 
posts are randomized meaning that the will not be posted
ordered by block number.
.fi

.TP
\fB[-rr|--reconnect]
.nf
Active if \fI-rc|--reconnect\fR appears in the command line... or
\fIreconnect\fR is set to True in the configuration file used.
\fIIf there are several posts because the file is posted
by block because the \fIblocksize\fR option was set, there is a
reconnection to the broker everytime a post is to be sent.
.fi
