.TH DD_Watch "1" "Aug 2015" "sara 0.0.1" "Sarracenia suite"
.SH NAME
dd_watch \- Sarracenia program watching a directory and posting messages when a file is written.
.SH SYNOPSIS
.B dd_watch 
[\fI-s|--source source_url\fR] [\fI-pb|--post_broker broker_url\fR]...[\fIOPTIONS\fR]
.SH DESCRIPTION
.PP
In the SARRACENIA suite, the main goal is to post the availability and readiness
of one's file product. Subscribers use \fIdd_subscribe\fR to consume the post and
download the product.

\fIdd_watch\fR watches a directory (or a file) and posts product when they are created or modified.
\fIdd_watch\fR arguments are exactly like \fIdd_post\fR.

The [\fI-s|--source source_url\fR] option specifies
the location to download from which the product can be downloaded by subscribers.
There is usually one posting per product.

If the product is included in the \fIsource_url\fR, \fIdd_watch\fR watches that file.
If the \fIsource_url\fR ends at a directory level, \fIdd_watch\fR posts any file in
that directory that is created or modified.

The destination of the post is an AMQP server, also called a broker.
The user specifies it with the option [\fI-pb|--post_broker broker_url\fR]. 

.nf
The URL form of the \fIsource_url\fR are to watch a product :

       [ftp|http|sftp]://[user[:password]@]host[:port]//absolute_path_to_the/product_name
       or
       [ftp|http|sftp]://[user[:password]@]host[:port]/relative_path_to_the/product_name
       or
       file://absolute_path_to_the/product_name
.fi

.nf
The URL form of the \fIsource_url\fR are to watch a directory :

       [ftp|http|sftp]://[user[:password]@]host[:port]//absolute_path_to_the
       or
       [ftp|http|sftp]://[user[:password]@]host[:port]/relative_path_to_the
       or
       file://absolute_path_to_the
.fi

.nf
The URL form of the \fIbroker_url\fR :

       [amqp|amqps]://[user[:password]@]host[:port]
.fi

An example of an excution of \fIdd_watch\fR checking a product:
.nf

dd_watch -s sftp://stanley@mysftpserver.com//data/shared/products/foo -pb amqp://broker.com

Here, \fIdd_watch\fR checks if the file /data/shared/products/foo is modified.
When it happens, \fIdd_watch\fR  reads the file /data/shared/products/foo and calculates its checksum.
It then builds a post message, logs into broker.com as user 'guest' (default credentials)
and sends the post to defaults vhost '/' and exchange 'sx_guest' (default exchange)

A subscriber can download the file /data/shared/products/foo  by logging as user stanley
on mysftpserver.com using the sftp protocol to  broker.com assuming he has proper credentials.

The output of the command is as follows :

[INFO] Key v01.post.20150813.guest.data.shared.products.foo
[INFO] Notice 20150813161959.854 256 1 0 0 d 25d231ec0ae3c569ba27ab7a74dd72ce default sftp://stanley@mysftpserver.com/ /data/shared/products/foo

.fi
In SARRACENIA each post is published under a certain topic.
The first log line starting with '[INFO] Key', gives the \fBtopic\fR of the
post. Topics in \fIAMQP\fR are fields separated by dot. In SARRACENIA 
it is made of a version \fIV01\fR, an action \fIpost\fR, the date \fI20150813\fR,
the AMQP user \fIguest\fR and finally the file path separated with dots, here,
\fIdata.shared.products.foo\fR

The second log line starting with '[INFO] Notice' is the product post.
Here it consists of a time \fI20150813161959.854\fR, a size in bytes \fI256\fR,
the number of block of that size \fI1\fR, the remaining bytes \fI0\fR, the
current block \fI0\fR, a flag \fId\fR meaning the md5 checksum is
performed on the data, the checksum \fI25d231ec0ae3c569ba27ab7a74dd72ce\fR,
a tag \fIdefault\fR and finally the source url of the product in the last 2 fields.
.fi

Another example checking a product:
.nf

dd_watch -dr /data/web/public_data -s http://dd.weather.gc.ca/bulletins/alphanumeric/SACN32_CWAO_123456 -pb amqp://broker.com

By default, dd_watch checks the file /data/web/public_data/bulletins/alphanumeric/SACN32_CWAO_123456
(concatenating the document_root and relative path of the source url to obtain the local file path).
If the file changes, it calculates its checksum. It then builds a post message, logs into broker.com as user 'guest'
(default credentials) and sends the post to defaults vhost '/' and exchange 'sx_guest' (default exchange)

A subscriber can download the file http://dd.weather.gc.ca/bulletins/alphanumeric/SACN32_CWAO_123456 using http
without authentication on dd.weather.gc.ca.
.fi

An example checking a directory:
.nf

dd_watch -dr /data/web/public_data -s http://dd.weather.gc.ca/bulletins/alphanumeric -pb amqp://broker.com

Here, dd_watch checks for file creation(modification) in /data/web/public_data/bulletins/alphanumeric
(concatenating the document_root and relative path of the source url to obtain the directory path).
If the file SACN32_CWAO_123456 is being created in that directory, dd_watch calculates its checksum.
It then builds a post message, logs into broker.com as user 'guest' 
(default credentials) and sends the post to exchange 'sx_guest' (default exchange)

A subscriber can download the created/modified file http://dd.weather.gc.ca/bulletins/alphanumeric/SACN32_CWAO_123456 using http
without authentication on dd.weather.gc.ca.
.fi

.SH ARGUMENTS AND OPTIONS
.PP
.TP
\fB[-bz|--blocksize <value>]
.nf
The user can post a file in multiple blocks.
This option determines the \fIblocksize\fR.
This will result in several posts for one product whenever the
file is bigger than the \fIblocksize\fR.
The value of the \fIblocksize\fR  is an integer that may be
followed by  [\fIB|K|M|G|T\fR] which stands for \fIB\fRytes
,\fIK\fRilobytes, \fIM\fRegabytes, \fIG\fRigabytes, \fIT\fRerabytes.
All theses references are powers of 2 (except for Bytes).
.fi


.TP
\fB[-c|--config <configfile>]
.nf
Any command line arguments has a corresponding long version starting with '--'.
For example \fI-s\fR has the long form \fI--source\fR. You can also specify
this option in a configuration file shall you need it. To do so, you simply
use the long form without the '--', and put its value separated by a space.
In a configuration file the right syntax to set the source is :

\fBsource <source-url>\fR 

The \fIconfig\fR option is no exception... and if used the content of this
other specified file will have its options processed.
.fi

.TP
\fB[-dp|--destination_path <path>]
.nf
With the \fIdestination-path\fR  option, the user can
suggest a destination path to its products. If the given
path ends with '/' it suggests a directory path... 
If it doesn't, the option specifies a file renaming.
Some examples (some arguments/details omitted) :

     With no  \fIdestination-path\fR  option :

     dd_watch -s http://myapache.com/products ...

     If product foo gets created, the post will look like this :
     20150813161959.854 123 1 0 0 d 271dbe52628a3f83a77ab494817525c6 default http://myapache.com/ products/foo


     With a directory :

     dd_watch -s http://myapache.com/products -dp /dbase/ ...

     If product foo gets created, the post will look like this :
     20150813161959.854 123 1 0 0 d 271dbe52628a3f83a77ab494817525c6 default http://myapache.com/products/foo /dbase/foo


     Renaming the file:

     dd_watch -s http://myapache.com/products/foo -dp /dbase/toto ...

     If the product foo gets modified, the post will look like this :
     20150813161959.854 123 1 0 0 d 271dbe52628a3f83a77ab494817525c6 default http://myapache.com/products/foo /dbase/toto
.fi

.TP
\fB[-dr|--document_root <path>]
.nf
The \fIdocument_root\fR option supplies the directory path that,
when combined with the relative one from \fIsource url\fR, 
gives the local absolute path to the data file to be posted.
.fi

.TP
\fB[-f|--flags <string>]
.nf
Product posts include a flag field.
It is a comma separated string.
Some flag values tell the program how to calculate the checksum.
Valid checksum flags are :

    [0|n|d|c=<scriptname>]
    where 0 : no checksum... value in post is 0
          n : do checksum on filename
          d : do md5sum on file content

.fi

.TP
\fB[-h|-help|--help]
.nf
Display program options.
.fi

.TP
\fB[-pb|--post_broker <broker-url>]
.nf
\fIpost_broker\fR is the broker to connect to to send the post.
.fi

.TP
\fB[-pe|--post_exchange <exchange_name>]
.nf
By default, the exchange name is the concatenation of string 'sx_' and
the post_broker username. It can be overwritten with the \fIpost_exchange\fR
option.
.fi

.TP
\fB[-pk|--post_topic_key <key>]
.nf
By default, the topic key is made of a version \fIV01\fR, an action \fIpost\fR,
the date \fIYYYYmmdd\fR, the post_broker user and finally the file path separated
with dots (dot being the topic separator for amqp). It can be overwritten with the
\fIpost_topic_key\fR option.
.fi

.TP
\fB[-s|--source <source-url>]
.nf
\fIsource\fR is the actual download url to be
used by the subscribers.
.fi

.TP
\fB[-t|--tag <string>]
.nf
\fItag\fR is an arbitrary label that allows
the user to identify a specific flow.
By default the tag is \fIdefault\fR.
The tag string appears in the post.
.fi

.SH DEVELOPER SPECIFIC OPTIONS

.TP
\fB[-debug|--debug]
.nf
Active if \fI-debug|--debug\fR appears in the command line... or
\fIdebug\fR is set to True in the configuration file used.
.fi

.TP
\fB[-r|--randomize]
.nf
Active if \fI-r|--randomize\fR appears in the command line... or
\fIrandomize\fR is set to True in the configuration file used.
If there are several posts because the file is posted
by block because the \fIblocksize\fR option was set, the block 
posts are randomized meaning that the will not be posted
ordered by block number.
.fi

.TP
\fB[-rr|--reconnect]
.nf
Active if \fI-rc|--reconnect\fR appears in the command line... or
\fIreconnect\fR is set to True in the configuration file used.
\fIIf there are several posts because the file is posted
by block because the \fIblocksize\fR option was set, there is a
reconnection to the broker everytime a post is to be sent.
.fi
