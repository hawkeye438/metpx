
=========================
 Sarracenia in 8 Minutes
=========================

--------------------------
Status as of November 2015
--------------------------

.. Note::
   This text accompanies the A2B.dia diagram, one opens the diagram, 
   Selects view/layers, and at each *Layers* cue, change the visible layers to provide
   animation.

   Generate the slides with:
   awk '/^Layers/ { printf "dia -t png --size 1920x -e a2b_%s.png -L %s A2B.dia \n", $2, $3; }; ' script.txt | sh -x


Layers 01: Background


This is a quick explanation of how Sarracenia helps transferring files 
through complicated networks.  

Layers 02 Background,People

Alice and Bob are scientific colleagues that work in different companies, and 
are far away from each other.  Alice wants to send her folder of Frog DNA to Bob.

Layers 03 Background,People,F0

There are networks between them.

Layers 04 Background,People,F0,Network,DataStraight

Alice could try to send it directly to Bob, but it turns out:

Layers 05 Background,People,F0,Network,Firewalls

 - there are firewalls in the way, stopping direct transfers,

Layers 06 Background,People,F0,Network,CircuitousPath

 - Even if there is no firewall in the way transfers work, it might 
   a very slow path.

Layers 07 Background,People,F0,Network,Camel

 - Even if it takes the right path, the tools common to Alice and Bob might be slow

What Alice needs is for someone to figure out the best way to get her folder
from A to B, taking into account network layout and firewalls, and placing 
data pumps to forward the data wherever they are needed.

Layers 08 Background,People,F0,Network,pumps

Layers 09 Background,People,F0,Network,pumps,tAl2Aamqpdesc,Alice2Aamqp

Then Alice only needs to talk to the data pump nearest her, that would be 
Sarracenia pump A.  Alice uses the sr_post command to 
say: "I want my frog DNA folder to go to B and F!"

Layers 10 Background,People,F0,Network,pumps,Alice2Aamqp,tAl2Axfer,Al2Atransferandlog

Switch A runs an sr_sara service that acquires Alice's frog DNA folder, 
copying it onto A, and then Announces to anyone listening that 
Alice's folder is on A, and looking for a way to get to B and F.

Layers 11 Background,People,F0,Network,pumps,Alice2Aamqp,Al2Atransferandlog,tAC,A2Dvectors

The Green arrows are the AMQP messages.  There is one from Alice to A advertising 
the folder.  The black line is the actual data transferred using SFTP from 
Alice's server to the pump. Once that has completed, A Tells
Alice it has finished with a (green) AMQP log message. 

Pump C is listening (or subscribed) to Pump A, and since it knows 
the way to B and F, it acquires the folder from A, and then announces to 
anyone listening that Alice's folder is on C, and trying to get to B and F.  
This process repeats.

Layers 12 Background,People,F0,Network,pumps,Alice2Aamqp,Al2Atransferandlog,tAC,A2Dvectors,D2Evectors,D2F

and repeats.

Layers 13 Background,People,F0,Network,pumps,Alice2Aamqp,Al2Atransferandlog,tAC,A2Dvectors,D2Evectors,D2F,E2B

The arrows are blue where HTTP is used instead of SFTP to transfer the data. Pumps 
may use different tools, but Alice does not worry about it. The forwarding
is set up once by administrators, and works for anyone's future data going 
through.

The Sarracenia pumps are operated independently as peers, with no trust 
relationships between them, and no central management.  They just agree to 
pump data on each others' behalf.  And of course, Bob does not have to 
trust Alice either. 

So the pumps forward the data to B, and Bob picks it up from there.

Layers 14 Background,People,F0,Network,pumps,Alice2Aamqp,Al2Atransferandlog,tAC,A2Dvectors,D2Evectors,D2F,E2B,BobnotifiedB,BGetsB

But what if Pump E has a problem?

Layers 15 Background,People,F0,Network,pumps,Alice2Aamqp,Al2Atransferandlog,tAC,A2Dvectors,D2F,EBoom


Alice really wanted to make sure Bob got her folder, so she sent it to
B AND F. 


Layers 16 Background,People,F0,Network,pumps,Alice2Aamqp,Al2Atransferandlog,tAC,A2Dvectors,D2F,EBoom,BobFromF

How does Bob decide which pump is the primary, and which is the backup?
Look, B is not even in trouble here, it just is not getting any data from
E.  With Sarracenia, Bob can listen to both B and F all the time, and get 
Alice's folder from the pump that announces it first.

Layers 17 Background,People,F0,Network,pumps,Alice2Aamqp,Al2Atransferandlog,tAC,A2Dvectors,D2F,EBoom,BobnotifiedB,BobFromF

Because of Sarracenia's logging, Alice will know each pump that got the folder,
and will see that Bob got the folder through Pump F.  

Layers 18 Background,People,F0,Network,pumps,Alice2Aamqp,Al2Atransferandlog,tAC,A2Dvectors,D2F,EBoom,BobnotifiedB,BobFromF,OtherPeople

If others are interested in the folder, they subscribe to it at their nearest pump
as well.  As the folder passes through the network, they will be notified and 
they can get it too, and Alice will know they got it.  The data only has to pass 
through the long-haul, expensive networks once to get to everyone. 

Layers 19 Background,People,F0,Network,pumps,Alice2Aamqp,Al2Atransferandlog,tAC,A2Dvectors,D2F,EBoom,BobnotifiedB,BobFromF,OtherPeople,keys

Of course, if Alice only wants to share with Bob, the folder can be encrypted 
with a key she only shares with Bob.


Layers 20 Background,People,F0,Network,pumps,

Like a Star Trek Transporter, well perhaps High School Biology is closer,
Sarracenia dissects the frog into slices and sends them across the
network in parallel.

Layers 21 Background,People,F0,Network,pumps,F1

The parallel streams and speed are programmed by admins of each pump to match pipe capacity.

Layers 22 Background,People,F0,Network,pumps,F2

The people with knowledge of the nearby networks make performance decisions, and
get the best managed performance on a mix of transfers over a network with many users.

Layers 23 Background,People,F0,Network,pumps,FBob

Each slice is fingerprinted (or checksummed) to allow pumps to know what they have 
already received, so when a file in Alice's folder is changed, only that 
slice propagates through the network.  


Layers 24 Background,People,F0,Network,GISCPeers

Fingerprints also help if one needs data replicated over a large network of pumps,
such as for very high reliability applications.  In Sarracenia, pumps can answer to 
more than one name.  In this diagram, all the pumps answer to A as an alias.  if Alice 
posts to "A", The folder will go to all pumps.  Each pump just announces for it's 
neighbours, and propagates from pump to pump.

Layers 25 Background,People,F0,Network,GISCPeers,G0Ring

The switches just have to be connected somehow for full replication to occur.
With a single ring, the data will be crossing seven hops on average.  Dual ring
is better, but the precise arrangement does not matter. 

Layers 26 Background,People,F0,Network,GISCPeers,G0Ring,Bisections

In general, the more links are added, the fewer hops are needed to cover all 
the pumps.  Copies happen from the first neighbour to get the data, and flows 
naturally over the fastest paths, going wherever it hasn't reached like water 
into a bucket.  Fingerprints stop the replication by identifying when data
has already been received.  

In this mesh, for example, you can see it takes three hops.

Layers 27 Background,People,F0,Network,GISCPeers,G0Ring,Bisections,R0
Layers 28 Background,People,F0,Network,GISCPeers,G0Ring,Bisections,R0,R1
Layers 29 Background,People,F0,Network,GISCPeers,G0Ring,Bisections,R0,R1,R2
Layers 30 Background,People,F0,Network,GISCPeers,G0Ring,Bisections,R0,R1,R2,R3


As the configuration of Sarra links is very straight-forward, and even though it 
would be a very ugly diagram, it is reasonable to set up a full mesh for total redundancy,
and guaranteed hop count of 1.


Even if you do not need to send your folder anywhere, Sarracenia can be helpful:

Layers 31 Background,People,F0,Network,pumps,Alvin

Sarracenia notifications are more efficient and timely than polling a directory with 'ls'.  
Alvin could subscribe to Alice's posts on the same cluster, to get notified faster
and with reduced load, especially if there are many Alvins.

Layers 32 Background,People,F0,Tech

You should know that Sarracenia is just a use of AMQP messaging on top of a 
web and secure-shell server. You do not have to use the sarracenia tools to send
or receive data.  

Without the sarracenia tools, you just won't get your files as quickly, 
be able to use multiple streams and sources as easily, or track your 
deliveries (if you are a source.), but you can view all the data with 
a browser or use the downloader of your choice.  

.. NOTE ::
   FIXME!

The protocol to support these patterns is pretty simple: The AMQP messages 
we send just include: slice, fingerprint, and address information. 
It is documented in two man pages.  The code is smaller than the systems 
it replaces.  Sarracenia is a 'reference implementation' 
and we would be pleased if someone else other ones.  


Layers 33 Background,People,F0,Wrapup

So does Sarracenia actually work today?  The weather datamart has been our testbed
for two or three years.  One client in Germany, for example, has reduced their
usage by over 90%, while obtaining the same Canadian numerical weather modelling files
faster than before. 

The weather forecasting workstations for the 2015 Pan-am and Parapanam Games in Toronto 
used these tools to get a full weather centre feed at the venue much more easily 
than was possible before.

We also currently use the two server reliability strategy on the National Unified 
RADAR Processing system at the Canadian Meteorological Centre.

While all of these trials were successful, and the tools have proven utterly 
reliable, they are currently a bit complicated to set up and work is ongoing to 
make it easier to install and use.

This work is being done by the Data Interchange team to solve real-world everyday 
problems, and is simpler than the systems it is replacing.  It would be nice
if someone else found it useful.  

If you have questions, go to the web site, or, by all means, drop me an email.
I will be pleased to answer them. 

Thanks for your time
