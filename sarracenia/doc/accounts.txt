

These usernames are significant in that they are visible to all. Need to be understandable.
they are wider scope, than a person... perhaps call them 'Accounts'.
they turn up as usernames in AMQP and HTTP.

All Account names should be unique, but nothing will avoid clashes when sources are on 
different origins, and clients at different destinations.  Just a matter of seeing name
clashes in practice and fixing them.

So a Account is allocated for:

Each Source. (Alice)
   each source gets a source_<sourcename> exchange ... source_Alice. 
   on the posting switch (and the logging switch if different.)

   their directories get disseminated as YYYYMMDD/Alice/...

   Since the clients will see the directories, and therefore client configurations will include them.
   it would be wise to consider the account name public, and relatively static.

   Sources determine who can access their data.
   two aspects:
	- distribution scope ( what servers to post to )
	- authorization (which clients on the servers should access it.)
   	- see below sections for each.
   
Each Client (Bob)
    Client gets permission to access files (http level)
    Client gets permission to post log messages to log exchange 
	on the server that is sending them announcements.
    only exists in AMQP on the end broker.
	they authenticate to broker to get messages.

    also in apache at end server.

    All sources will see the client name in their logs.
    

Each Layer between Source and Client (ddsr,ddi,dd)   
    so each hop generates a log message, assigned to the layers.
    internal hops can be removed from stats easily.
    only exists in AMQP on the relevant brokers.
    ssc_ddsr
    ssc_ddi
    ssc_dd


Is Speedo a source? ... 
	creates no data, only messages.
	ssc_mon user?

Does Monitoring need an account?


To store the accounts, do we create a sub-domain for ldap 
( dd.science.gc.ca, dd.collab.science.gc.ca) and put them in there?
just allocate locally?   hmm... dunno.

these are data interchange accounts (separate from interactive ones, 
per org, rather than per person.)



Distribution/Scope:



Authorization:
	when sara picks up permit messages, it needs to route them to 
	a separate exchange, that only specific users will be able to see,
	rather than a public one.

	source emits a message.
	v01.permit.set.<source>.<topic>.<subtopic>...   
	body of message is the list of permitted users.

	if the file is empty, then remove the .htaccess file.

	reply:
	v01.log.permit.set...   
		which has a succeed or fail status.

	v01.permit.get.<source>.<topic>.<subtopic>...

	v01.log.permit.get
		body contains the list of users.

	body of message is the list of permitted users.
	

