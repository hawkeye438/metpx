
Log message contains:

is only emitted after processing of an announcement is completed, to indicate a final status of processing
that announcent.

topic matches announcement message except...
v01.log.... (or maybe status also, see 'status' below)

version should match the announcement version.

start is as per notification... just add fields after:

	sz sum baseurl relativeurl <host> <duration> <enddate> <status> <flow> <client>

------

	what if there are spaces in the file name?
	do we escape with \ or is it url-encoded %20? or something? just need to know.

------

can we just space out the fields on a single line? or do we need fancier parsing....
one line is better, because grep etc... works, and 1 message per line is easier to parse.

stuff that needs to be there:

startdate <date-time> of transfer...
	-- perhaps just indicate duration of transfer in seconds, rather than two dates.
	   saves few bytes.

Enddate <date-time> of transfer ... 

status 
	-- ok or error code> ... use http ones?
	-- 200 OK
	-- use 4xx series to report most issues.
		-- might invent some new ones, say to signify disk full ?
		-- encode errno?

	-- should topic include status?
	       v01.log.200..... (then do not need it in the body...)
	   cant subscribe only to errors? likely not useful as too many errors to subscribe to.
	   perhaps just 200 for success, and 400 for failure?
	    naw, think it is a pain. just leave it in body.

flow 
	-- application determined flow id, so the appication can relate it to their processing.
	-- flow is a display field, unchanged/untouched by sarracenia.

client 
	-- talk to the data source, and determine what is a good label to share.
           this is analogous to a company, or organization, and is likely not be unique to a single flow.
	-- subscriber chosen significant id, so that source can understand who has received it>
	-- often subscriber will be on s12124.rogers.net ... not terribly significant.
	-- client id is essentially a display field... based unchanged to source.

	-- so only sources and clients need to negotiate the idÂ´s,  we just need to pass it 
	   in both directions transparently, and use the identifier that they both know
	   whenever appropriate.

is client the username used to connect to the broker and httpd instance?
	-- in which case, it is no longer transparent to the switches, 
	   and we have to say something about it.
              so the client will see it, and it is a ''monitoring unit''

system each ddi/ddsr instance will be defined as an internal client, so internal vs. actual deliveries
are easily distinguished... does that mean each layer of switches has an amqp username?


