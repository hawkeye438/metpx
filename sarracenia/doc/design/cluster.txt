
Status: Pre-Draft

What does a cluster look like?

determine the topologies.

  standalone:
	router, sftp and apache on one node.

  switching/routing configuration:
	- ddsr
		one broker per node? 
		just one broker?

		ddsr - broker
		   pre-fetch validation would happen on the broker.
		   then re-post for the sara's on the movers.

		ddsr1 - data mover.
		ddsr2 - data mover.
		ddsr3 - data mover.
			.
			.
			.
		
		do we need a load balancer?

  data dissemination configuration.
    on a switching/router:
	Once delivery has occurred to all contexts, can you delete the file?
	just watch the log files and tick off as each scope confirms receipt.
	when last one confirmed, delete. (makes re-xmit difficult ;-)

	based on a file size threshold? if the file is too big, donÂ´t keep it around?


  data dissemination configuration.
	- multiple server nodes.  Each standalone.

	- dd - load balancer, just re-directs to a dd node?
		dd1,dd2, 

		broker on dd node has connection thereafter.
  data dissemination with a shared file system?
         dd - one broker.
	 dd1,dd2, ... all share the one big file system.


Use cases:


universal considerations/constraints:

   There are cluster file systems available everywhere.

   an operational team might want to monitor/alert when certain transfers esperience difficulty.

   security will want to run a scanner on it (each block?)
   security might want us to refuse certain file types, so they go through heavier scanning.
   or perform heavier scanning on those file types.


Questions for each use case:

   1. Storage Distribution
       how is storage provisioned (1 per server, common, grouped?)

   2. Server Software Distribution 
       where are brokers and http/sftp servers? (together? separate scopes? )

   3. Authentication Distribution
       does it make sense to share auth between amqp and sftp? (plan to do that for http.)

   4. Naming/scopes?
       what is a good name for this use case/scope?





Use Case 1: somebody wants to transfer a 3 TiB file.

   
        more info:
          it will take a long time, over a wan link, latency such that single thread is slow.
		want multiple threads.
          probably want it monitored so that someone will notice if it breaks.
	  probably want it logged so that people can see what happenned when it breaks.
	  bunny style, one broker for all servers.

       likely:
	  do not want to store the entire file on an intervening server.

	  do not want separate storage from user space for the file.
		-- have disk quotas within the switching network that force
		   a retention (or discard) policy.
	
	  one broker for the configuration.


       compromises one might make:
          can mix with random user code (interactive service) because duplicating space too expensive. 
             service level is therefore limited (not op0hr)

	suggestion:
	   it stores on normal user space... no on switch storage at all.
           no special authentication, just use normal accounts?

	   just use the switch to monitor and log transfers.

	   suitable within GoC?
	


Use Case 2: somebody wants rock solid, op0hr PDS/PX style service

       likely
	   have multiple independent servers.  each have own disk.
           data can route through any server, but space not shared for improved reliability.

	   want full dev/stage/ops for change management.
		no user code anywhere.
  

Use Case 3: Somebody wants a web server where they can see the files sent (dd style)
	 data dissemination...

       likely:
          have multiple independent servers for op0hr service.
		- like current dd, requires broker per server.
          
          have a multiple servers with a cluster file system for op3hr service.
		- one broker for all servers.

	  have a single server with a shared or file system for opDay service
		- one broker on the server.


Use Case 4:   somebody wants to send us a continuous feed of tiny files. (px-paz case...)

   acquisition ... not sure if this is different from pds/px case.

   someone (outside org) wants to send us data.
	- using straight sftp.
	- using dd_aware method.
	- using dd_watch.

   someone inside Gov. wants to do same.


Use Case 5: acquire 1 TiB file from the internet to internal..

   as above, but the file is really big.



Name the scopes after the zones they serve?
	escience-operationsHPC-OZ
		- but there might be one for op0hr, and a second for opDay

	escience-collaborationHPC-XZ
		


references:
    http://spring.io/blog/2011/04/01/routing-topologies-for-performance-and-scalability-with-rabbitmq/
   


